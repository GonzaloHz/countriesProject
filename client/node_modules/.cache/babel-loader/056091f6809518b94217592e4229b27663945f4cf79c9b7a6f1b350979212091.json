{"ast":null,"code":"import axios from \"axios\";\n// import 'dotenv/config'\nimport dotenv from 'dotenv';\n// import * as dotenv from 'dotenv'\n\nexport const ALLCOUNTRIES = 'ALLCOUNTRIES';\nexport const COUNTRYNAME = 'COUNTRYNAME';\nexport const ALLACTIVITIES = 'ALLACTIVITIES';\nexport const GETCOUNTRYBYID = 'GETCOUNTRYBYID';\nexport const ADDACTIVITY = 'ADDACTIVITY';\ndotenv.config();\n\n// const url = process.env.BACKEND_URL\nvar REACT_APP_BACKEND_URL = 'testingUrl';\n// } = process.env;\n// console.log(url);\nexport const getAllCountries = (qOffset, qLimit) => {\n  return async function (dispatch) {\n    return axios.get(`${REACT_APP_BACKEND_URL}countries?qOffset=${qOffset}&qLimit=${qLimit}`).then(response => {\n      dispatch({\n        type: ALLCOUNTRIES,\n        payload: response.data\n      });\n    }).catch(err => console.error(err));\n  };\n};\nexport const filteredByName = (name, qcontinent, qactivity, qNameOrPop, qOrder, qOffset, qLimit) => {\n  return async function (dispatch) {\n    return axios.get(`${REACT_APP_BACKEND_URL}countries/name?qname=${name}&qcontinent=${qcontinent}&qActivityName=${qactivity}&qNameOrPoP=${qNameOrPop}&qOrder=${qOrder}&qOffset=${qOffset}&qLimit=${qLimit}`).then(response => {\n      dispatch({\n        type: COUNTRYNAME,\n        payload: response.data\n      });\n    });\n  };\n};\nexport const getAllActivities = () => {\n  return async function (dispatch) {\n    return axios.get(REACT_APP_BACKEND_URL + 'activities/').then(response => {\n      dispatch({\n        type: ALLACTIVITIES,\n        payload: response.data\n      });\n    });\n  };\n};\nexport const getCountryById = idCountry => {\n  return async function (dispatch) {\n    return axios.get(`${REACT_APP_BACKEND_URL}countries/${idCountry}`).then(response => {\n      dispatch({\n        type: GETCOUNTRYBYID,\n        payload: response.data\n      });\n    });\n  };\n};\nexport const addOneActivity = inputActivity => {\n  return async function (dispatch) {\n    return axios.post(REACT_APP_BACKEND_URL + 'activities/', inputActivity).then(response => {\n      dispatch({\n        type: ADDACTIVITY,\n        payload: response.data\n      });\n    });\n  };\n};\nexport const deleteOneActivity = id => {\n  return async function () {\n    return axios.delete(`${REACT_APP_BACKEND_URL}activities/${id}`);\n  };\n};","map":{"version":3,"names":["axios","dotenv","ALLCOUNTRIES","COUNTRYNAME","ALLACTIVITIES","GETCOUNTRYBYID","ADDACTIVITY","config","REACT_APP_BACKEND_URL","getAllCountries","qOffset","qLimit","dispatch","get","then","response","type","payload","data","catch","err","console","error","filteredByName","name","qcontinent","qactivity","qNameOrPop","qOrder","getAllActivities","getCountryById","idCountry","addOneActivity","inputActivity","post","deleteOneActivity","id","delete"],"sources":["C:/Users/Administrador/Desktop/countriesProject/client/src/Redux/Actions/actions.js"],"sourcesContent":["import axios from \"axios\"\r\n// import 'dotenv/config'\r\nimport dotenv from 'dotenv';\r\n// import * as dotenv from 'dotenv'\r\n\r\nexport const ALLCOUNTRIES = 'ALLCOUNTRIES'\r\nexport const COUNTRYNAME = 'COUNTRYNAME'\r\nexport const ALLACTIVITIES = 'ALLACTIVITIES'\r\nexport const GETCOUNTRYBYID = 'GETCOUNTRYBYID'\r\nexport const ADDACTIVITY = 'ADDACTIVITY'\r\n\r\ndotenv.config()\r\n\r\n// const url = process.env.BACKEND_URL\r\nvar REACT_APP_BACKEND_URL = 'testingUrl'\r\n// } = process.env;\r\n// console.log(url);\r\nexport const getAllCountries = (qOffset, qLimit) => {\r\n    return async function (dispatch) {\r\n      return axios.get(`${REACT_APP_BACKEND_URL}countries?qOffset=${qOffset}&qLimit=${qLimit}`)\r\n      .then(response => {\r\n        dispatch({ \r\n            type: ALLCOUNTRIES,\r\n            payload: response.data\r\n        });\r\n      })\r\n      .catch(err => console.error(err))\r\n    };\r\n};\r\n\r\nexport const filteredByName = (name, qcontinent, qactivity, qNameOrPop, qOrder, qOffset, qLimit) => {\r\n    return async function (dispatch) {\r\n      return axios.get(`${REACT_APP_BACKEND_URL}countries/name?qname=${name}&qcontinent=${qcontinent}&qActivityName=${qactivity}&qNameOrPoP=${qNameOrPop}&qOrder=${qOrder}&qOffset=${qOffset}&qLimit=${qLimit}`)\r\n      .then(response => {\r\n        dispatch({\r\n          type: COUNTRYNAME,\r\n          payload: response.data\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport const getAllActivities = () => {\r\n  return async function(dispatch) {\r\n    return axios.get(REACT_APP_BACKEND_URL+'activities/')\r\n    .then(response => {\r\n      dispatch({\r\n        type: ALLACTIVITIES,\r\n        payload: response.data\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nexport const getCountryById = (idCountry) => {\r\n  return async function(dispatch) {\r\n    return axios.get(`${REACT_APP_BACKEND_URL}countries/${idCountry}`)\r\n    .then(response => {\r\n      dispatch({\r\n        type: GETCOUNTRYBYID,\r\n        payload: response.data\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nexport const addOneActivity = (inputActivity) => {\r\n  return async function(dispatch) {\r\n    return axios.post(REACT_APP_BACKEND_URL+'activities/', inputActivity)\r\n    .then(response => {\r\n      dispatch({\r\n        type: ADDACTIVITY,\r\n        payload: response.data\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteOneActivity = (id) => {\r\n  return async function() {\r\n    return axios.delete(`${REACT_APP_BACKEND_URL}activities/${id}`)\r\n  }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}