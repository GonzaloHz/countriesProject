{"ast":null,"code":"import axios from \"axios\";\nimport dotenv from 'dotenv';\nexport const ALLCOUNTRIES = 'ALLCOUNTRIES';\nexport const COUNTRYNAME = 'COUNTRYNAME';\nexport const ALLACTIVITIES = 'ALLACTIVITIES';\nexport const GETCOUNTRYBYID = 'GETCOUNTRYBYID';\nexport const ADDACTIVITY = 'ADDACTIVITY';\ndotenv.config();\nconst {\n  REACT_APP_BACKEND_URL\n} = process.env;\nconsole.log(REACT_APP_BACKEND_URL);\nexport const getAllCountries = (qOffset, qLimit) => {\n  return async function (dispatch) {\n    return axios.get(`${REACT_APP_BACKEND_URL}countries?qOffset=${qOffset}&qLimit=${qLimit}`).then(response => {\n      dispatch({\n        type: ALLCOUNTRIES,\n        payload: response.data\n      });\n    }).catch(err => console.error(err));\n  };\n};\nexport const filteredByName = (name, qcontinent, qactivity, qNameOrPop, qOrder, qOffset, qLimit) => {\n  return async function (dispatch) {\n    return axios.get(`${REACT_APP_BACKEND_URL}countries/name?qname=${name}&qcontinent=${qcontinent}&qActivityName=${qactivity}&qNameOrPoP=${qNameOrPop}&qOrder=${qOrder}&qOffset=${qOffset}&qLimit=${qLimit}`).then(response => {\n      dispatch({\n        type: COUNTRYNAME,\n        payload: response.data\n      });\n    });\n  };\n};\nexport const getAllActivities = () => {\n  return async function (dispatch) {\n    return axios.get(REACT_APP_BACKEND_URL + 'activities/').then(response => {\n      dispatch({\n        type: ALLACTIVITIES,\n        payload: response.data\n      });\n    });\n  };\n};\nexport const getCountryById = idCountry => {\n  return async function (dispatch) {\n    return axios.get(`${REACT_APP_BACKEND_URL}countries/${idCountry}`).then(response => {\n      dispatch({\n        type: GETCOUNTRYBYID,\n        payload: response.data\n      });\n    });\n  };\n};\nexport const addOneActivity = inputActivity => {\n  return async function (dispatch) {\n    return axios.post(REACT_APP_BACKEND_URL + 'activities/', inputActivity).then(response => {\n      dispatch({\n        type: ADDACTIVITY,\n        payload: response.data\n      });\n    });\n  };\n};\nexport const deleteOneActivity = id => {\n  return async function () {\n    return axios.delete(`${REACT_APP_BACKEND_URL}activities/${id}`);\n  };\n};","map":{"version":3,"names":["axios","dotenv","ALLCOUNTRIES","COUNTRYNAME","ALLACTIVITIES","GETCOUNTRYBYID","ADDACTIVITY","config","REACT_APP_BACKEND_URL","process","env","console","log","getAllCountries","qOffset","qLimit","dispatch","get","then","response","type","payload","data","catch","err","error","filteredByName","name","qcontinent","qactivity","qNameOrPop","qOrder","getAllActivities","getCountryById","idCountry","addOneActivity","inputActivity","post","deleteOneActivity","id","delete"],"sources":["C:/Users/Administrador/Desktop/countriesProject/client/src/Redux/Actions/actions.js"],"sourcesContent":["import axios from \"axios\"\r\nimport dotenv from 'dotenv'\r\n\r\nexport const ALLCOUNTRIES = 'ALLCOUNTRIES'\r\nexport const COUNTRYNAME = 'COUNTRYNAME'\r\nexport const ALLACTIVITIES = 'ALLACTIVITIES'\r\nexport const GETCOUNTRYBYID = 'GETCOUNTRYBYID'\r\nexport const ADDACTIVITY = 'ADDACTIVITY'\r\n\r\ndotenv.config()\r\n\r\nconst {\r\n  REACT_APP_BACKEND_URL\r\n} = process.env;\r\n\r\nconsole.log(REACT_APP_BACKEND_URL);\r\n\r\nexport const getAllCountries = (qOffset, qLimit) => {\r\n    return async function (dispatch) {\r\n      return axios.get(`${REACT_APP_BACKEND_URL}countries?qOffset=${qOffset}&qLimit=${qLimit}`)\r\n      .then(response => {\r\n        dispatch({ \r\n            type: ALLCOUNTRIES,\r\n            payload: response.data\r\n        });\r\n      })\r\n      .catch(err => console.error(err))\r\n    };\r\n};\r\n\r\nexport const filteredByName = (name, qcontinent, qactivity, qNameOrPop, qOrder, qOffset, qLimit) => {\r\n    return async function (dispatch) {\r\n      return axios.get(`${REACT_APP_BACKEND_URL}countries/name?qname=${name}&qcontinent=${qcontinent}&qActivityName=${qactivity}&qNameOrPoP=${qNameOrPop}&qOrder=${qOrder}&qOffset=${qOffset}&qLimit=${qLimit}`)\r\n      .then(response => {\r\n        dispatch({\r\n          type: COUNTRYNAME,\r\n          payload: response.data\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport const getAllActivities = () => {\r\n  return async function(dispatch) {\r\n    return axios.get(REACT_APP_BACKEND_URL+'activities/')\r\n    .then(response => {\r\n      dispatch({\r\n        type: ALLACTIVITIES,\r\n        payload: response.data\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nexport const getCountryById = (idCountry) => {\r\n  return async function(dispatch) {\r\n    return axios.get(`${REACT_APP_BACKEND_URL}countries/${idCountry}`)\r\n    .then(response => {\r\n      dispatch({\r\n        type: GETCOUNTRYBYID,\r\n        payload: response.data\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nexport const addOneActivity = (inputActivity) => {\r\n  return async function(dispatch) {\r\n    return axios.post(REACT_APP_BACKEND_URL+'activities/', inputActivity)\r\n    .then(response => {\r\n      dispatch({\r\n        type: ADDACTIVITY,\r\n        payload: response.data\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteOneActivity = (id) => {\r\n  return async function() {\r\n    return axios.delete(`${REACT_APP_BACKEND_URL}activities/${id}`)\r\n  }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}